<project name="Flight Map" default="compile" basedir=".">
  <description>
  The program takes in an input of costs from one location to another
  and outputs all possible paths and their corresponding costs.
  </description>
  <!-- global properties for this build file -->
  <property name="source.dir" location="src"/>
  <property name="build.dir" location="bin"/>
  <property name="dist.dir" location="dist"/>
  <property name="doc.dir" location="doc"/>
  <property name="test.dir" location="bin/src"/>
  <path id="junit.class.path">
    <fileset dir="lib" includes="junit-4.12.jar"/>
    <fileset dir="lib" includes="hamcrest-core-1.3.jar"/>
    <pathelement location="bin"/>
  </path>
    <!-- set up some directories used by this project -->
  <target name="init" description="setup project directories">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${doc.dir}" />
  </target>
  <!-- Compile the java code in src dir into build dir -->
  <target name="compile" depends="init" description="compile java sources">
    <javac srcdir="${source.dir}" destdir="${build.dir}" includeantruntime="false">
      <classpath refid="junit.class.path"/>
    </javac>
  </target>

  <!-- Generate javadocs for current project into docs dir -->
  <target name="doc" depends="init" description="generate documentation" >
    <javadoc sourcepath="${source.dir}" destdir="${doc.dir}/">
      <fileset dir="src"/>
      <classpath refid="junit.class.path"/>
    </javadoc>
  </target>
  <!-- Compile the java code in src dir into build dir -->
  <target name="dist" depends="init" description="creates jars">
    <jar destfile= "${dist.dir}/FlightMap.jar" basedir="${source.dir}" includes="${build.dir}/FlightMap.class"/>
    <jar destfile= "${dist.dir}/SearchMap.jar" basedir="${source.dir}" includes="${build.dir}/SearchMap.class"/>
    <jar destfile= "${dist.dir}/TestFlightMap.jar" basedir="${source.dir}" includes="${build.dir}/TestSearchMap.class"/>
    <jar destfile= "${dist.dir}/TestSearchMap.jar" basedir="${source.dir}" includes="${build.dir}/TestSearchMap.class"/>
  </target>
  <!-- Delete the build & doc directories and Emacs backup (*~) files -->
  <target name="clean" description="tidy up the workspace">
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
    <delete dir="${doc.dir}" />
    <delete>
      <fileset defaultexcludes="no" dir="${source.dir}" includes="**/*~"/>
    </delete>
  </target>
  <!-- Tests JUnit file-->
  <target name="test" depends="compile">
    <property name="junit.path" refid="junit.class.path"/>
    <junit printsummary="on" haltonfailure="no" fork="true">
      <classpath>
        <path refid="junit.class.path"/>
      </classpath>
        <formatter type="brief" usefile="false" />
        <batchtest>
            <fileset dir="bin">
              <include name="**/TestFlightMap.class" />
              <include name="**/TestSearchMap.class" />
            </fileset>
        </batchtest>
    </junit>
  </target>


</project>
